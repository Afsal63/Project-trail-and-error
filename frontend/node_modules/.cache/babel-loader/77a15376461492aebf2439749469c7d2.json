{"ast":null,"code":"var _jsxFileName = \"/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button, FormControl } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { listProductDetails, updateProduct } from '../actions/productAction';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport CropImage from '../components/CropImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const params = useParams();\n  const productId = params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(false);\n  const [category, setCategory] = useState('');\n  const [brand, setBrand] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [showCropper, setShowCropper] = useState(false);\n  const [cropImage, setCropImage] = useState(false);\n  const [imageOne, setImageOne] = useState(null);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      navigate('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, navigate, productId, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.file[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 31\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image URL\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"file\",\n            name: \"imageOne\",\n            onChange: e => {\n              setCropImage(e.target.files[0]);\n              setShowCropper(true);\n            },\n            accept: \".jpg,.jpeg,.png,\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"py-1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Add extra images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            type: \"file\",\n            id: \"image-files\",\n            label: \"Choose Files\",\n            custom: true,\n            multiple: true,\n            onChange: multiFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand \",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand \",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter countInStock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category \",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description \",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description \",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CropImage, {\n        src: cropImage,\n        imageCallback: image => {\n          setImageOne(image);\n          setShowCropper(false);\n          uploadFileHandler(image);\n        },\n        closeHander: () => {\n          setShowCropper(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"cDtvVrZyLuWEeQswU51gpKMJefc=\", false, function () {\n  return [useNavigate, useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useEffect","useState","Link","useParams","useNavigate","Form","Button","FormControl","useDispatch","useSelector","Message","Loader","FormContainer","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","CropImage","ProductEditScreen","navigate","params","productId","id","name","setName","price","setPrice","image","setImage","category","setCategory","brand","setBrand","countInStock","setCountInStock","description","setDescription","uploading","setUploading","showCropper","setShowCropper","cropImage","setCropImage","imageOne","setImageOne","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","_id","uploadFileHandler","e","file","target","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value","files","multiFileHandler"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nimport React, { useEffect, useState } from 'react'\nimport { Link, useParams, useNavigate, } from 'react-router-dom'\nimport { Form, Button,FormControl, } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct} from '../actions/productAction'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport CropImage from '../components/CropImage'\n\n\nconst ProductEditScreen = () => {\n    const navigate = useNavigate()\n    const params = useParams()\n    const productId = params.id;\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState(false)\n    const [category , setCategory]=useState('')\n    const [brand,setBrand]=useState('')\n    const [countInStock,setCountInStock]=useState(0)\n    const [description,setDescription]=useState('')\n    const [uploading, setUploading]=useState(false)\n    const [showCropper, setShowCropper] = useState(false)\n    const [cropImage, setCropImage] = useState(false)\n    const [imageOne, setImageOne] = useState(null)\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector((state) => state.productDetails)\n    const { loading, error, product } =productDetails\n\n   const productUpdate =useSelector((state)=>state.productUpdate)\n   const {loading:loadingUpdate,error:errorUpdate,success:successUpdate}=productUpdate\n\n    useEffect(() => {\n       if(successUpdate){\n           dispatch({type: PRODUCT_UPDATE_RESET})\n           navigate('/admin/productlist')\n       }else{\n\n        if (!product.name || product._id !== productId) {\n            dispatch(listProductDetails(productId))\n          } else {\n            setName(product.name)\n            setPrice(product.price)\n            setImage(product.image)\n            setBrand(product.brand)\n            setCategory(product.category)\n            setCountInStock(product.countInStock)\n            setDescription(product.description)\n          }\n       }\n          \n        \n      }, [dispatch, navigate, productId, product, successUpdate])\n\n      const uploadFileHandler = async(e)=>{\n         const file = e.target.file[0]\n         const formData =new FormData()\n         formData.append('image', file)\n         setUploading(true)\n\n         try {\n             const config={\n                 headers:{\n                   'Content-Type': 'multipart/form-data'  \n                 }\n             }\n\n             const {data} =await axios.post('/api/upload',formData,config)\n             setImage(data)\n             setUploading(false)\n         } catch (error) {\n             console.error(error)\n             setUploading(false)\n         }\n      }\n\n    const submitHandler = (e) => {  \n        e.preventDefault()\n\ndispatch(updateProduct({\n    _id: productId,\n    name,\n    price,\n    image,\n    brand,\n    category,\n    description,\n    countInStock\n\n\n}))\n\n    }\n    return (\n        <>\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n            {loadingUpdate && <Loader/>}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n                {loading ? (\n                    <Loader />\n                ) : error ? (\n                    <Message variant='danger'>{error}</Message>\n                ) : (\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='name'>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type='name'\n                                placeholder='Enter name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='price'>\n                            <Form.Label>price</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter price'\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                       \n                        <Form.Group controlId='image'>\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter image URL'\n                      value={image}\n                      onChange={(e) => setImage(e.target.value)}\n                    ></Form.Control>\n                    <FormControl\n                      type=\"file\"\n                      name=\"imageOne\"\n                    onChange={(e) => {\n                      setCropImage(e.target.files[0])\n                      setShowCropper(true)\n                    }}\n                    accept=\".jpg,.jpeg,.png,\"\n                    />\n                    {uploading && <Loader />}\n                  </Form.Group>\n\n                  <Form.Group className=\"py-1\">\n                    <Form.Label>Add extra images</Form.Label>\n                    <FormControl\n                      type=\"file\"\n                      id=\"image-files\"\n                      label=\"Choose Files\"\n                      custom\n                      multiple\n                      onChange={multiFileHandler}\n                    />\n                    {uploading && <Loader />}\n                  </Form.Group>\n\n                        <Form.Group controlId='brand '>\n                        <Form.Label>brand </Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter brand '\n                                value={brand }\n                                onChange={(e) => setBrand(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n                       \n                        <Form.Group controlId='countInStock'>\n                            <Form.Label>Count In Stock</Form.Label>\n                            <Form.Control\n                                type='number'\n                                placeholder='Enter countInStock'\n                                value={countInStock}\n                                onChange={(e) => setCountInStock(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='category'>\n                        <Form.Label>Category </Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter category '\n                                value={category }\n                                onChange={(e) => setCategory(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='description '>\n                        <Form.Label>Description</Form.Label>\n                            <Form.Control\n                                type='text'\n                                placeholder='Enter description '\n                                value={description }\n                                onChange={(e) => setDescription(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group>\n\n                        <Button type='submit' variant='primary'>\n                            Update\n                        </Button>\n                    </Form>\n                )}\n                 <CropImage\n              src={cropImage}\n              imageCallback={(image) => {\n                setImageOne(image)\n                setShowCropper(false)\n                uploadFileHandler(image)\n              }}\n              closeHander={() => {\n                setShowCropper(false)\n              }}\n            />\n            </FormContainer>\n        </>\n    )\n}\n\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}