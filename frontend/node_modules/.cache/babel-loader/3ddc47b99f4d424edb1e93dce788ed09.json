{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstands\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      console.log(existi);\n\n      if (existItem) {\n        console.log(existItem);\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","console","log","existi","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAuC;AAAA,MAAtCC,KAAsC,uEAA9B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA8B;AAAA,MAAXC,MAAW;;AAC9D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,aAAL;AACI,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAC1DK,OADc,CAAlB;AAGIC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;;AACJ,UAAIN,SAAJ,EAAe;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,GAAhB,CAAqBL,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;AAFR,SAAP;AAQH,OAVD,MAUO;AACH,eAAM,EACF,GAAGR,KADD;AAEFC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFT,SAAN;AAKH;;AAEL;AACI,aAAOJ,KAAP;AA1BR;AA4BH,CA7BM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstands\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.\n                product)\n\n                console.log(existi);\n            if (existItem) {\n                console.log(existItem);\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                      x.product === existItem.product ? item : x\n                    ),\n                    \n                }\n\n            } else {\n                return{\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                }\n\n            }\n           \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}