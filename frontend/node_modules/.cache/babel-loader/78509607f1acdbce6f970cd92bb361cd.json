{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DTAITLS_FAIL, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAIS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config); // console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAIS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'applecation/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DTAITLS_FAIL,\n      payload: error.response && error.respomse.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // /api/users\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config); // console.log(data)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    cons;\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DTAITLS_FAIL","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAIS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","respomse","updateUserProfile","user","put","listUsers","deleteUser","cons"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { USER_DETAILS_REQUEST,\n     USER_DETAILS_SUCCESS, \n     USER_DTAITLS_FAIL, \n     USER_LOGIN_FAIL,\n      USER_LOGIN_REQUEST,\n       USER_LOGIN_SUCCESS, \n       USER_LOGOUT, USER_REGISTER_FAIL,\n        USER_REGISTER_REQUEST,\n         USER_REGISTER_SUCCESS, \n         USER_UPDATE_PROFILE_FAIL,\n          USER_UPDATE_PROFILE_REQUEST,\n           USER_UPDATE_PROFILE_SUCCESS,\n        USER_DETAIS_RESET,\n        USER_LIST_REQUEST,\n        USER_LIST_SUCCESS,\n        USER_LIST_FAIL,\n        USER_LIST_RESET,\n        USER_DELETE_REQUEST\n     } from \"../constants/userConstants\"\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST })\n        const config = { headers: { 'Content-Type': 'application/json', }, }\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n        // console.log(data)\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({type:USER_DETAIS_RESET})\n    dispatch({type:ORDER_LIST_MY_RESET})\n    dispatch({type:USER_LIST_RESET})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        )\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n\n        })\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'applecation/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n        const { data } = await axios.get(\n            `/api/users/${id}`, config)\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DTAITLS_FAIL,\n            payload:\n                error.response && error.respomse.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n        \n    }\n}\n\n// /api/users\n\nexport const listUsers = ()=>async (dispatch,getState)=>{\n    try {\n        dispatch({type:USER_LIST_REQUEST})\n        const {userLogin:{userInfo}} = getState()\n        const config = { headers: {Authorization: `Bearer ${userInfo.token}`},}\n        const {data}=await axios.get(`/api/users`,config)\n        // console.log(data)\n        dispatch({type:USER_LIST_SUCCESS,payload:data})\n    } catch (error) {\n        dispatch({type: USER_LIST_FAIL,\n            payload:\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          })\n    }\n  }\n\n  export const deleteUser=()=>async (dispatch,getState)=>{\n      try {\n          dispatch({\n              type: USER_DELETE_REQUEST\n          })\n          cons\n      } catch (error) {\n          \n      }\n  }"]},"metadata":{},"sourceType":"module"}