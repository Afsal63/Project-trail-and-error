{"ast":null,"code":"// import path from 'path'\n// import express from 'express'\n// import multer from 'multer'\n// const router = express.Router()\n// const storage = multer.diskStorage({\n//   destination(req, file, cb) {\n//     cb(null, 'uploads/')\n//   },\n//   filename(req, file, cb) {\n//     cb(\n//       null,\n//       `${file.fieldname}-${Date.now()}${path.extname(file.originalname)}`\n//     )\n//   },\n// })\n// function checkFileType(file, cb) {\n//   const filetypes = /jpg|jpeg|png/\n//   const extname = filetypes.test(path.extname(file.originalname).toLowerCase())\n//   const mimetype = filetypes.test(file.mimetype)\n//   if (extname && mimetype) {\n//     return cb(null, true)\n//   } else {\n//     cb('Images only!')\n//   }\n// }\n// const upload = multer({\n//   storage,\n//   fileFilter: function (req, file, cb) {\n//     checkFileType(file, cb)\n//   },\n// })\n// router.post('/', upload.single('image'), (req, res) => {\n//   console.log(req.file+\"55555555555555555555555555555555555555\")\n//   res.send(`/${req.file.path}`)\n// })\n// export default router\nimport path from 'path';\nimport express from 'express';\nimport multer from 'multer';\nconst router = express.Router();\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, 'uploads/');\n  },\n\n  filename(req, file, cb) {\n    cb(null, `${file.fieldname}-${Date.now()}${path.extname(file.originalname)}`);\n  }\n\n});\n\nfunction checkFileType(file, cb) {\n  const filetypes = /jpg|jpeg|png/;\n  const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = filetypes.test(file.mimetype);\n\n  if (extname && mimetype) {\n    return cb(null, true);\n  } else {\n    cb('Images only!');\n  }\n}\n\nconst upload = multer({\n  storage,\n  fileFilter: function (req, file, cb) {\n    checkFileType(file, cb);\n  }\n});\nrouter.post('/', upload.single('image'), (req, res) => {\n  console.log('data');\n  res.send(`/${req.file.path}`);\n});\nexport default router;","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js"],"names":["path","express","multer","router","Router","storage","diskStorage","destination","req","file","cb","filename","fieldname","Date","now","extname","originalname","checkFileType","filetypes","test","toLowerCase","mimetype","upload","fileFilter","post","single","res","console","log","send"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAACI,WAAP,CAAmB;AACjCC,EAAAA,WAAW,CAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAgB;AACzBA,IAAAA,EAAE,CAAC,IAAD,EAAO,UAAP,CAAF;AACD,GAHgC;;AAIjCC,EAAAA,QAAQ,CAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAgB;AACtBA,IAAAA,EAAE,CACA,IADA,EAEC,GAAED,IAAI,CAACG,SAAU,IAAGC,IAAI,CAACC,GAAL,EAAW,GAAEd,IAAI,CAACe,OAAL,CAAaN,IAAI,CAACO,YAAlB,CAAgC,EAFlE,CAAF;AAID;;AATgC,CAAnB,CAAhB;;AAYA,SAASC,aAAT,CAAuBR,IAAvB,EAA6BC,EAA7B,EAAiC;AAC/B,QAAMQ,SAAS,GAAG,cAAlB;AACA,QAAMH,OAAO,GAAGG,SAAS,CAACC,IAAV,CAAenB,IAAI,CAACe,OAAL,CAAaN,IAAI,CAACO,YAAlB,EAAgCI,WAAhC,EAAf,CAAhB;AACA,QAAMC,QAAQ,GAAGH,SAAS,CAACC,IAAV,CAAeV,IAAI,CAACY,QAApB,CAAjB;;AAEA,MAAIN,OAAO,IAAIM,QAAf,EAAyB;AACvB,WAAOX,EAAE,CAAC,IAAD,EAAO,IAAP,CAAT;AACD,GAFD,MAEO;AACLA,IAAAA,EAAE,CAAC,cAAD,CAAF;AACD;AACF;;AAED,MAAMY,MAAM,GAAGpB,MAAM,CAAC;AACpBG,EAAAA,OADoB;AAEpBkB,EAAAA,UAAU,EAAE,UAAUf,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACnCO,IAAAA,aAAa,CAACR,IAAD,EAAOC,EAAP,CAAb;AACD;AAJmB,CAAD,CAArB;AAOAP,MAAM,CAACqB,IAAP,CAAY,GAAZ,EAAiBF,MAAM,CAACG,MAAP,CAAc,OAAd,CAAjB,EAAyC,CAACjB,GAAD,EAAMkB,GAAN,KAAc;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAF,EAAAA,GAAG,CAACG,IAAJ,CAAU,IAAGrB,GAAG,CAACC,IAAJ,CAAST,IAAK,EAA3B;AACD,CAHD;AAKA,eAAeG,MAAf","sourcesContent":["// import path from 'path'\n// import express from 'express'\n// import multer from 'multer'\n// const router = express.Router()\n\n// const storage = multer.diskStorage({\n//   destination(req, file, cb) {\n//     cb(null, 'uploads/')\n//   },\n//   filename(req, file, cb) {\n//     cb(\n//       null,\n//       `${file.fieldname}-${Date.now()}${path.extname(file.originalname)}`\n//     )\n//   },\n// })\n\n// function checkFileType(file, cb) {\n//   const filetypes = /jpg|jpeg|png/\n//   const extname = filetypes.test(path.extname(file.originalname).toLowerCase())\n//   const mimetype = filetypes.test(file.mimetype)\n\n//   if (extname && mimetype) {\n//     return cb(null, true)\n//   } else {\n//     cb('Images only!')\n//   }\n// }\n\n// const upload = multer({\n//   storage,\n//   fileFilter: function (req, file, cb) {\n//     checkFileType(file, cb)\n//   },\n// })\n\n// router.post('/', upload.single('image'), (req, res) => {\n//   console.log(req.file+\"55555555555555555555555555555555555555\")\n//   res.send(`/${req.file.path}`)\n// })\n\n// export default router\n\n\nimport path from 'path'\nimport express from 'express'\nimport multer from 'multer'\nconst router = express.Router()\n\nconst storage = multer.diskStorage({\n  destination(req, file, cb) {\n    cb(null, 'uploads/')\n  },\n  filename(req, file, cb) {\n    cb(\n      null,\n      `${file.fieldname}-${Date.now()}${path.extname(file.originalname)}`\n    )\n  },\n})\n\nfunction checkFileType(file, cb) {\n  const filetypes = /jpg|jpeg|png/\n  const extname = filetypes.test(path.extname(file.originalname).toLowerCase())\n  const mimetype = filetypes.test(file.mimetype)\n\n  if (extname && mimetype) {\n    return cb(null, true)\n  } else {\n    cb('Images only!')\n  }\n}\n\nconst upload = multer({\n  storage,\n  fileFilter: function (req, file, cb) {\n    checkFileType(file, cb)\n  },\n})\n\nrouter.post('/', upload.single('image'), (req, res) => {\n  console.log('data')\n  res.send(`/${req.file.path}`)\n})\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}