{"ast":null,"code":"var _jsxFileName = \"/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button, Container, FormControl, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails, updateProduct } from '../actions/productAction';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = () => {\n  _s();\n\n  const params = useParams();\n  const productId = params.id;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState(''); // const [rating, setRating] = useState('')\n  // const [numReviews, setNumReviews] = useState('')\n  // const [uploading, setUploading] = useState(false)\n  // const [images, setImages] = useState([])\n  // const [showCropper, setShowCropper] = useState(false)\n  // const [cropImage, setCropImage] = useState(false)\n  // const [imageOne, setImageOne] = useState(null)\n\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails; // const productUpdate = useSelector((state) => state.productUpdate)\n  // const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n  useEffect(() => {\n    // if (successUpdate) {\n    //   dispatch({ type: PRODUCT_UPDATE_RESET })\n    //   navigate('/admin/productlist')\n    // } else {\n    if (!product.name || product._id !== productId) {\n      dispatch(listProductDetails(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setBrand(product.brand);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setDescription(product.description); // setRating(product.rating)\n      // setNumReviews(product.numReviews)\n    } // }\n\n  }, [dispatch, navigate, productId, product]);\n\n  const submitHandler = e => {\n    e.preventDefault(); //UPDATAE PRODUCT\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/productlist\",\n        className: \"btn btn-light my-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"m-auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Edit Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"name\",\n                  placeholder: \"Enter name\",\n                  value: name,\n                  onChange: e => setName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"price\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"Enter price\",\n                  value: price,\n                  onChange: e => setPrice(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"image\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter image URL\",\n                  value: image,\n                  onChange: e => setImage(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"brand\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter brand \",\n                  value: brand,\n                  onChange: e => setBrand(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"countInStock\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Count In Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"Enter countInStock\",\n                  value: countInStock,\n                  onChange: e => setCountInStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"category\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter Category \",\n                  value: category,\n                  onChange: e => setCategory(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"description\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Enter description \",\n                  value: description,\n                  onChange: e => setDescription(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProductEditScreen, \"W33RbcXYBG9O4ztj87J8+X/WA+o=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js"],"names":["React","useState","useEffect","Link","useNavigate","useParams","Form","Button","Container","FormControl","Row","Col","useDispatch","useSelector","axios","Message","Loader","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","ProductEditScreen","params","productId","id","navigate","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","dispatch","productDetails","state","loading","error","product","_id","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { Form, Button, Container, FormControl, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails, updateProduct } from '../actions/productAction'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\n\nconst ProductEditScreen = () => {\n  const params = useParams()\n  const productId = params.id;\n  const navigate = useNavigate();\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  // const [rating, setRating] = useState('')\n  // const [numReviews, setNumReviews] = useState('')\n  // const [uploading, setUploading] = useState(false)\n  // const [images, setImages] = useState([])\n  // const [showCropper, setShowCropper] = useState(false)\n  // const [cropImage, setCropImage] = useState(false)\n  // const [imageOne, setImageOne] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  // const productUpdate = useSelector((state) => state.productUpdate)\n  // const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n\n   \n\n\n  useEffect(() => {\n   \n    // if (successUpdate) {\n    //   dispatch({ type: PRODUCT_UPDATE_RESET })\n    //   navigate('/admin/productlist')\n    // } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n       \n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n        // setRating(product.rating)\n        // setNumReviews(product.numReviews)\n      }\n    // }\n  }, [dispatch, navigate, productId, product, ])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n   //UPDATAE PRODUCT\n  }\n\n  return (\n    <>\n      <Container>\n        <Link to='/admin/productlist' className='btn btn-light my-3'>\n          Go Back\n        </Link>\n        <Container>\n          <Row>\n            <Col md={6} className='m-auto'>\n              <h1>Edit Product</h1>\n\n              {/* {loadingUpdate && <Loader />}\n              {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>} */}\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant='danger'>{error}</Message>\n              ) : (\n                <Form onSubmit={submitHandler}>\n                  <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                      type='name'\n                      placeholder='Enter name'\n                      value={name}\n                      onChange={(e) => setName(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Form.Group controlId='price'>\n                    <Form.Label>price</Form.Label>\n                    <Form.Control\n                      type='number'\n                      placeholder='Enter price'\n                      value={price}\n                      onChange={(e) => setPrice(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Form.Group controlId='image'>\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter image URL'\n                      value={image}\n                      onChange={(e) => setImage(e.target.value)}\n                    ></Form.Control>\n                    \n                  </Form.Group>\n\n                  <Form.Group controlId='brand'>\n                    <Form.Label>Brand</Form.Label>\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter brand '\n                      value={brand}\n                      onChange={(e) => setBrand(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Form.Group controlId='countInStock'>\n                    <Form.Label>Count In Stock</Form.Label>\n                    <Form.Control\n                      type='number'\n                      placeholder='Enter countInStock'\n                      value={countInStock}\n                      onChange={(e) => setCountInStock(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Form.Group controlId='category'>\n                    <Form.Label>Category</Form.Label>\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter Category '\n                      value={category}\n                      onChange={(e) => setCategory(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n                 \n\n                  <Form.Group controlId='description'>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter description '\n                      value={description}\n                      onChange={(e) => setDescription(e.target.value)}\n                    ></Form.Control>\n                  </Form.Group>\n\n                  <Button type='submit' variant='primary'>\n                    Update\n                  </Button>\n\n                </Form>\n              )}\n             \n            </Col>\n          </Row>\n        </Container>\n\n      </Container>\n    </>\n  )\n}\n\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}