{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = loca;\nconst intialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","reducer","productList","productDetails","cart","userLogin","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","loca","intialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,WAAW,EAAEL,kBADe;AAE5BM,EAAAA,cAAc,EAAEL,qBAFY;AAG5BM,EAAAA,IAAI,EAAEL,WAHsB;AAI5BM,EAAAA,SAAS,EAAEL;AAJiB,CAAD,CAA/B;AAQA,MAAMM,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD0B,GAEvB,EAFN;AAII,MAAMG,mBAAmB,GAACC,IAA1B;AAEJ,MAAMC,WAAW,GAAG;AAChBT,EAAAA,IAAI,EAAE;AAAEU,IAAAA,SAAS,EAAER;AAAb;AADU,CAApB;AAIA,MAAMS,UAAU,GAAG,CAACpB,KAAD,CAAnB;AAEA,MAAMqB,KAAK,GAAGxB,WAAW,CAACS,OAAD,EAAUY,WAAV,EAAuBjB,mBAAmB,CAC9DF,eAAe,CAAC,GAAGqB,UAAJ,CAD+C,CAA1C,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userLoginReducer} from './reducers/userReducers'\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\n    const userInfoFromStorage=loca\n\nconst intialState = {\n    cart: { cartItems: cartItemsFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, intialState, composeWithDevTools\n    (applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}