{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMyList: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst intialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderMyList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","intialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,EAGIC,mBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,QAMO,4BANP;AAOA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,wBAJJ,EAKIC,eALJ,EAMIC,iBANJ,EAOIC,iBAPJ,QASO,yBATP;AAWA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,0BALP;AAQA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC5BsB,EAAAA,WAAW,EAAElB,kBADe;AAE5BmB,EAAAA,cAAc,EAAElB,qBAFY;AAG5BmB,EAAAA,aAAa,EAAClB,mBAHc;AAI5BmB,EAAAA,aAAa,EAAClB,oBAJc;AAKhCmB,EAAAA,aAAa,EAAClB,oBALkB;AAM5BmB,EAAAA,IAAI,EAAElB,WANsB;AAO5BmB,EAAAA,SAAS,EAAElB,gBAPiB;AAQ5BmB,EAAAA,YAAY,EAAElB,mBARc;AAS5BmB,EAAAA,WAAW,EAAElB,kBATe;AAU5BmB,EAAAA,iBAAiB,EAAElB,wBAVS;AAW5BmB,EAAAA,QAAQ,EAAElB,eAXkB;AAY5BmB,EAAAA,UAAU,EAAElB,iBAZgB;AAa5BmB,EAAAA,UAAU,EAAClB,iBAbiB;AAc5BmB,EAAAA,WAAW,EAAElB,kBAde;AAe5BmB,EAAAA,YAAY,EAAElB,mBAfc;AAgB5BmB,EAAAA,QAAQ,EAAElB,eAhBkB;AAiB5BmB,EAAAA,WAAW,EAAElB;AAjBe,CAAD,CAA/B;AAwBA,MAAMmB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFN;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC7BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD6B,GAE7B,EAFN;AAIA,MAAMK,WAAW,GAAG;AAChBnB,EAAAA,IAAI,EAAE;AACFoB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GADU;AAKhBjB,EAAAA,SAAS,EAAE;AAAEqB,IAAAA,QAAQ,EAAEL;AAAZ;AALK,CAApB;AAOA,MAAMM,UAAU,GAAG,CAAChD,KAAD,CAAnB;AAEA,MAAMiD,KAAK,GAAGpD,WAAW,CAACsB,OAAD,EAAUyB,WAAV,EAAuB3C,mBAAmB,CAC9DF,eAAe,CAAC,GAAGiD,UAAJ,CAD+C,CAA1C,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDleteReducer,\n    productCreateReducer,\n    productUpdateReducer\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer\n\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer\n} from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete:productDleteReducer,\n    productCreate:productCreateReducer,\nproductUpdate:productUpdateReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate:userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderMyList: orderListMyReducer,\n\n    \n\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\n    : {}\n\nconst intialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage }\n}\nconst middleware = [thunk]\n\nconst store = createStore(reducer, intialState, composeWithDevTools\n    (applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}