{"ast":null,"code":"var _jsxFileName = \"/Users/afsal/Desktop/THE-PROJECT1/frontend/src/components/CropImage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\nimport { getCroppedImg } from './getCroppedImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CropImage = _ref => {\n  _s();\n\n  let {\n    src,\n    imageCallback,\n    closeHander\n  } = _ref;\n  const cropperRef = useRef(null);\n  const cropDetailsRef = useRef(null);\n\n  const onCrop = e => cropDetailsRef.current = e.detail;\n\n  const clickHndler = async () => {\n    const croppedImage = await getCroppedImg(cropperRef.current, cropDetailsRef.current, src.name);\n    imageCallback(croppedImage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-fixed crop-img-container-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"position-fixed text-center crop-img-container bg-white shadow rounded-2\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"gy-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          className: \"text-center d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Cropper, {\n            src: src ? URL.createObjectURL(src) : '',\n            className: \"image-fulid\",\n            style: {\n              height: '600px',\n              width: 'fit-content'\n            } // Cropper.js options\n            ,\n            aspectRatio: 500 / 500,\n            guides: false,\n            crop: onCrop,\n            ref: cropperRef,\n            zoomable: false // autoCrop={false}\n            ,\n            movable: false,\n            minCropBoxWidth: 200,\n            minCropBoxHeight: 250\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"btn-danger us-btn-danger mx-1\",\n            style: {\n              width: 'fit-content'\n            },\n            onClick: closeHander,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            className: \"us-btn mx-1\",\n            style: {\n              width: 'fit-content'\n            },\n            onClick: clickHndler,\n            children: \"Crop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CropImage, \"HA5vmGPuJ9qVVP4Gf+uUKGxwJt8=\");\n\n_c = CropImage;\nexport default CropImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CropImage\");","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/components/CropImage.js"],"names":["React","useRef","Button","Col","Container","Row","Cropper","getCroppedImg","CropImage","src","imageCallback","closeHander","cropperRef","cropDetailsRef","onCrop","e","current","detail","clickHndler","croppedImage","name","URL","createObjectURL","height","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAO,4BAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;;;AAGA,MAAMC,SAAS,GAAG,QAAyC;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,aAAP;AAAsBC,IAAAA;AAAtB,GAAwC;AACzD,QAAMC,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;AACA,QAAMY,cAAc,GAAGZ,MAAM,CAAC,IAAD,CAA7B;;AAEA,QAAMa,MAAM,GAAIC,CAAD,IAAQF,cAAc,CAACG,OAAf,GAAyBD,CAAC,CAACE,MAAlD;;AAEA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,YAAY,GAAG,MAAMZ,aAAa,CACtCK,UAAU,CAACI,OAD2B,EAEtCH,cAAc,CAACG,OAFuB,EAGtCP,GAAG,CAACW,IAHkC,CAAxC;AAKAV,IAAAA,aAAa,CAACS,YAAD,CAAb;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,2CAAf;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,yEAArB;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,SAAS,EAAC,2CAAvB;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,GAAG,EAAEV,GAAG,GAAGY,GAAG,CAACC,eAAJ,CAAoBb,GAApB,CAAH,GAA8B,EADxC;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,KAAK,EAAE;AAAEc,cAAAA,MAAM,EAAE,OAAV;AAAmBC,cAAAA,KAAK,EAAE;AAA1B,aAHT,CAIE;AAJF;AAKE,YAAA,WAAW,EAAE,MAAM,GALrB;AAME,YAAA,MAAM,EAAE,KANV;AAOE,YAAA,IAAI,EAAEV,MAPR;AAQE,YAAA,GAAG,EAAEF,UARP;AASE,YAAA,QAAQ,EAAE,KATZ,CAUE;AAVF;AAWE,YAAA,OAAO,EAAE,KAXX;AAYE,YAAA,eAAe,EAAE,GAZnB;AAaE,YAAA,gBAAgB,EAAE;AAbpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,+BAFZ;AAGE,YAAA,KAAK,EAAE;AAAEY,cAAAA,KAAK,EAAE;AAAT,aAHT;AAIE,YAAA,OAAO,EAAEb,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,KAAK,EAAE;AAAEa,cAAAA,KAAK,EAAE;AAAT,aAHT;AAIE,YAAA,OAAO,EAAEN,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA3DD;;GAAMV,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { useRef } from 'react'\nimport { Button, Col, Container, Row } from 'react-bootstrap'\nimport { Cropper } from 'react-cropper'\nimport 'cropperjs/dist/cropper.css'\nimport { getCroppedImg } from './getCroppedImage'\n\n\nconst CropImage = ({ src, imageCallback, closeHander }) => {\n  const cropperRef = useRef(null)\n  const cropDetailsRef = useRef(null)\n\n  const onCrop = (e) => (cropDetailsRef.current = e.detail)\n\n  const clickHndler = async () => {\n    const croppedImage = await getCroppedImg(\n      cropperRef.current,\n      cropDetailsRef.current,\n      src.name\n    )\n    imageCallback(croppedImage)\n  }\n\n  return (\n    <div className=\"position-fixed crop-img-container-wrapper\">\n      <Container className=\"position-fixed text-center crop-img-container bg-white shadow rounded-2\">\n        <Row className=\"gy-3\">\n          <Col xs={12} className=\"text-center d-flex justify-content-center\">\n            <Cropper\n              src={src ? URL.createObjectURL(src) : ''}\n              className=\"image-fulid\"\n              style={{ height: '600px', width: 'fit-content' }}\n              // Cropper.js options\n              aspectRatio={500 / 500}\n              guides={false}\n              crop={onCrop}\n              ref={cropperRef}\n              zoomable={false}\n              // autoCrop={false}\n              movable={false}\n              minCropBoxWidth={200}\n              minCropBoxHeight={250}\n            />\n          </Col>\n          <Col xs={12}>\n            <Button\n              type=\"button\"\n              className=\"btn-danger us-btn-danger mx-1\"\n              style={{ width: 'fit-content' }}\n              onClick={closeHander}\n            >\n              Cancel\n            </Button>\n\n            <Button\n              type=\"button\"\n              className=\"us-btn mx-1\"\n              style={{ width: 'fit-content' }}\n              onClick={clickHndler}\n            >\n              Crop\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default CropImage\n"]},"metadata":{},"sourceType":"module"}