{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DTAITLS_FAIL, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAIS_RESET } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config); // console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    tye\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'applecation/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DTAITLS_FAIL,\n      payload: error.response && error.respomse.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DTAITLS_FAIL","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAIS_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","tye","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","respomse","updateUserProfile","user","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { USER_DETAILS_REQUEST,\n     USER_DETAILS_SUCCESS, \n     USER_DTAITLS_FAIL, \n     USER_LOGIN_FAIL,\n      USER_LOGIN_REQUEST,\n       USER_LOGIN_SUCCESS, \n       USER_LOGOUT, USER_REGISTER_FAIL,\n        USER_REGISTER_REQUEST,\n         USER_REGISTER_SUCCESS, \n         USER_UPDATE_PROFILE_FAIL,\n          USER_UPDATE_PROFILE_REQUEST,\n           USER_UPDATE_PROFILE_SUCCESS,\n        USER_DETAIS_RESET,\n     } from \"../constants/userConstants\"\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST })\n        const config = { headers: { 'Content-Type': 'application/json', }, }\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n        // console.log(data)\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({tye})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        }\n        const { data } = await axios.post(\n            '/api/users',\n            { name, email, password },\n            config\n        )\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n\n        })\n        const { userLogin: { userInfo } } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'applecation/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n        const { data } = await axios.get(\n            `/api/users/${id}`, config)\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DTAITLS_FAIL,\n            payload:\n                error.response && error.respomse.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}