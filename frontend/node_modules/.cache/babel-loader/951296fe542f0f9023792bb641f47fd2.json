{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// import { Link, useNavigate, useParams } from 'react-router-dom'\n// import { Form, Button, Container,  Row, Col } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import axios from 'axios'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n// import { listProductDetails, updateProduct } from '../actions/productAction'\n// import { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n// const ProductEditScreen = () => {\n//   const params = useParams()\n//   const productId = params.id;\n//   const navigate = useNavigate();\n//   const [name, setName] = useState('')\n//   const [price, setPrice] = useState(0)\n//   const [image, setImage] = useState('')\n//   const [brand, setBrand] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [countInStock, setCountInStock] = useState(0)\n//   const [description, setDescription] = useState('')\n//  const [uploading,setUploading]=useState(false)\n//   const dispatch = useDispatch()\n//   const productDetails = useSelector((state) => state.productDetails)\n//   const { loading, error, product } = productDetails\n//   const productUpdate = useSelector((state) => state.productUpdate)\n//   const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n//   useEffect(() => {\n//     if (successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET })\n//       navigate('/admin/productlist')\n//     } else {\n//       if (!product.name || product._id !== productId) {\n//         dispatch(listProductDetails(productId))\n//       } else {\n//         setName(product.name)\n//         setPrice(product.price)\n//         setImage(product.image)\n//         setBrand(product.brand)\n//         setCategory(product.category)\n//         setCountInStock(product.countInStock)\n//         setDescription(product.description)\n//         // setRating(product.rating)\n//         // setNumReviews(product.numReviews)\n//       }\n//     }\n//   }, [dispatch, navigate, productId, product,successUpdate ])\n//   const uploadFileHandler = async(e)=>{\n//     const file =e.target.files[0]\n//     const formData=new FormData()\n//     formData.append('image', file)\n//     setUploading(true)\n//     try {\n//       const config={\n//         headers:{\n//           'Content-Type': 'multipart/form-data'\n//         }\n//       }\n//       const{data} =await axios.post('/api/upload',formData,config)\n//       setImage(data)\n//       setUploading(false)\n//     } catch (error) {\n//       console.error(error)\n//       setUploading(false)\n//     }\n//   }\n//   const submitHandler = (e) => {\n//     e.preventDefault()\n// dispatch(updateProduct({\n//   _id: productId,\n//   name,\n//   price,\n//   image,\n//   brand,\n//   category,\n//   description,\n//   countInStock,\n// }))\n//   }\n//   return (\n//     <>\n//       <Container>\n//         <Link to='/admin/productlist' className='btn btn-light my-3'>\n//           Go Back\n//         </Link>\n//         <Container>\n//           <Row>\n//             <Col md={6} className='m-auto'>\n//               <h1>Edit Product</h1>\n//               {loadingUpdate && <Loader />}\n//               {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n//               {loading ? (\n//                 <Loader />\n//               ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//               ) : (\n//                 <Form onSubmit={submitHandler}>\n//                   <Form.Group controlId='name'>\n//                     <Form.Label>Name</Form.Label>\n//                     <Form.Control\n//                       type='name'\n//                       placeholder='Enter name'\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Form.Group controlId='price'>\n//                     <Form.Label>price</Form.Label>\n//                     <Form.Control\n//                       type='number'\n//                       placeholder='Enter price'\n//                       value={price}\n//                       onChange={(e) => setPrice(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Form.Group controlId='image'>\n//               <Form.Label>Image</Form.Label>\n//               <Form.Control\n//                 type='text'\n//                 placeholder='Enter image url'\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></Form.Control>\n//               <Form.Control\n//                 id='image-file'\n//                 label='Choose File'\n//                 custom\n//                 onChange={uploadFileHandler}\n//               ></Form.Control>\n//               {uploading && <Loader />}\n//             </Form.Group>\n//                   <Form.Group controlId='brand'>\n//                     <Form.Label>Brand</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter brand '\n//                       value={brand}\n//                       onChange={(e) => setBrand(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Form.Group controlId='countInStock'>\n//                     <Form.Label>Count In Stock</Form.Label>\n//                     <Form.Control\n//                       type='number'\n//                       placeholder='Enter countInStock'\n//                       value={countInStock}\n//                       onChange={(e) => setCountInStock(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Form.Group controlId='category'>\n//                     <Form.Label>Category</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter Category '\n//                       value={category}\n//                       onChange={(e) => setCategory(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Form.Group controlId='description'>\n//                     <Form.Label>Description</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter description '\n//                       value={description}\n//                       onChange={(e) => setDescription(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n//                   <Button type='submit' variant='primary'>\n//                     Update\n//                   </Button>\n//                 </Form>\n//               )}\n//             </Col>\n//           </Row>\n//         </Container>\n//       </Container>\n//     </>\n//   )\n// }\n// export default ProductEditScreen","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ProductEditScreen.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from 'react'\n// import { Link, useNavigate, useParams } from 'react-router-dom'\n// import { Form, Button, Container,  Row, Col } from 'react-bootstrap'\n// import { useDispatch, useSelector } from 'react-redux'\n// import axios from 'axios'\n// import Message from '../components/Message'\n// import Loader from '../components/Loader'\n// import { listProductDetails, updateProduct } from '../actions/productAction'\n// import { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\n\n\n// const ProductEditScreen = () => {\n//   const params = useParams()\n//   const productId = params.id;\n//   const navigate = useNavigate();\n\n//   const [name, setName] = useState('')\n//   const [price, setPrice] = useState(0)\n//   const [image, setImage] = useState('')\n//   const [brand, setBrand] = useState('')\n//   const [category, setCategory] = useState('')\n//   const [countInStock, setCountInStock] = useState(0)\n//   const [description, setDescription] = useState('')\n//  const [uploading,setUploading]=useState(false)\n  \n\n//   const dispatch = useDispatch()\n\n//   const productDetails = useSelector((state) => state.productDetails)\n//   const { loading, error, product } = productDetails\n\n//   const productUpdate = useSelector((state) => state.productUpdate)\n//   const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n\n   \n\n\n//   useEffect(() => {\n   \n//     if (successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET })\n//       navigate('/admin/productlist')\n//     } else {\n//       if (!product.name || product._id !== productId) {\n//         dispatch(listProductDetails(productId))\n       \n//       } else {\n//         setName(product.name)\n//         setPrice(product.price)\n//         setImage(product.image)\n//         setBrand(product.brand)\n//         setCategory(product.category)\n//         setCountInStock(product.countInStock)\n//         setDescription(product.description)\n//         // setRating(product.rating)\n//         // setNumReviews(product.numReviews)\n//       }\n//     }\n//   }, [dispatch, navigate, productId, product,successUpdate ])\n\n//   const uploadFileHandler = async(e)=>{\n//     const file =e.target.files[0]\n//     const formData=new FormData()\n//     formData.append('image', file)\n//     setUploading(true)\n//     try {\n//       const config={\n//         headers:{\n//           'Content-Type': 'multipart/form-data'\n//         }\n//       }\n//       const{data} =await axios.post('/api/upload',formData,config)\n//       setImage(data)\n//       setUploading(false)\n\n//     } catch (error) {\n//       console.error(error)\n//       setUploading(false)\n//     }\n//   }\n\n//   const submitHandler = (e) => {\n//     e.preventDefault()\n// dispatch(updateProduct({\n//   _id: productId,\n//   name,\n//   price,\n//   image,\n//   brand,\n//   category,\n//   description,\n//   countInStock,\n  \n// }))\n//   }\n\n//   return (\n//     <>\n//       <Container>\n//         <Link to='/admin/productlist' className='btn btn-light my-3'>\n//           Go Back\n//         </Link>\n//         <Container>\n//           <Row>\n//             <Col md={6} className='m-auto'>\n//               <h1>Edit Product</h1>\n\n//               {loadingUpdate && <Loader />}\n//               {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n//               {loading ? (\n//                 <Loader />\n//               ) : error ? (\n//                 <Message variant='danger'>{error}</Message>\n//               ) : (\n//                 <Form onSubmit={submitHandler}>\n//                   <Form.Group controlId='name'>\n//                     <Form.Label>Name</Form.Label>\n//                     <Form.Control\n//                       type='name'\n//                       placeholder='Enter name'\n//                       value={name}\n//                       onChange={(e) => setName(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n\n//                   <Form.Group controlId='price'>\n//                     <Form.Label>price</Form.Label>\n//                     <Form.Control\n//                       type='number'\n//                       placeholder='Enter price'\n//                       value={price}\n//                       onChange={(e) => setPrice(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n\n//                   <Form.Group controlId='image'>\n//               <Form.Label>Image</Form.Label>\n//               <Form.Control\n//                 type='text'\n//                 placeholder='Enter image url'\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></Form.Control>\n//               <Form.Control\n//                 id='image-file'\n//                 label='Choose File'\n//                 custom\n//                 onChange={uploadFileHandler}\n//               ></Form.Control>\n//               {uploading && <Loader />}\n//             </Form.Group>\n\n//                   <Form.Group controlId='brand'>\n//                     <Form.Label>Brand</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter brand '\n//                       value={brand}\n//                       onChange={(e) => setBrand(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n\n//                   <Form.Group controlId='countInStock'>\n//                     <Form.Label>Count In Stock</Form.Label>\n//                     <Form.Control\n//                       type='number'\n//                       placeholder='Enter countInStock'\n//                       value={countInStock}\n//                       onChange={(e) => setCountInStock(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n\n//                   <Form.Group controlId='category'>\n//                     <Form.Label>Category</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter Category '\n//                       value={category}\n//                       onChange={(e) => setCategory(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n                 \n\n//                   <Form.Group controlId='description'>\n//                     <Form.Label>Description</Form.Label>\n//                     <Form.Control\n//                       type='text'\n//                       placeholder='Enter description '\n//                       value={description}\n//                       onChange={(e) => setDescription(e.target.value)}\n//                     ></Form.Control>\n//                   </Form.Group>\n\n//                   <Button type='submit' variant='primary'>\n//                     Update\n//                   </Button>\n\n//                 </Form>\n//               )}\n             \n//             </Col>\n//           </Row>\n//         </Container>\n\n//       </Container>\n//     </>\n//   )\n// }\n\n// export default ProductEditScreen\n\n"]},"metadata":{},"sourceType":"module"}