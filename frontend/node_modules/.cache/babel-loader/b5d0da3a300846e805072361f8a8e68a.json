{"ast":null,"code":"import axios from 'axios'; // import { config } from 'dotenv'\n\nimport { ORDER_CREAT_REQUEST, ORDER_CREAT_SUCCESS, ORDER_CREAT_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREAT_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config); // console.log(data)\n\n    dispatch({\n      type: ORDER_CREAT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREAT_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config); // console.log(data)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config); // console.log(data)\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    console.log;\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.message.data.message : error.messaeg\n    });\n  }\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREAT_REQUEST","ORDER_CREAT_SUCCESS","ORDER_CREAT_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","console","log","messaeg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAAQC,mBAAR,EACIC,mBADJ,EAEIC,gBAFJ,EAGAC,qBAHA,EAIAC,qBAJA,EAKAC,kBALA,EAMAC,iBANA,EAOAC,iBAPA,EAQAC,cARA,EASAC,qBATA,EAUAC,qBAVA,EAWAC,kBAXA,QAWwB,6BAXxB;AAYI,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACA,UAAM;AAAEiB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AACA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxB,KAAK,CAACyB,IAAN,CAAY,aAAZ,EAAyBX,KAAzB,EAA+BM,MAA/B,CAAvB,CATA,CAUA;;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEf,mBAAR;AAA6BwB,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AAEH,GAbD,CAaE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,gBADD;AAELuB,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD1B,GAEMF,KAAK,CAACE;AALX,KAAD,CAAR;AAOH;AACJ,CAvBM;AAyBP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOhB,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEb;AAAR,KAAD,CAAR;AACA,UAAM;AAAEc,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AACA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL;AACAC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxB,KAAK,CAACgC,GAAN,CAAW,eAAcD,EAAG,EAA5B,EAA8BX,MAA9B,CAAvB,CATA,CAUA;;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEZ,qBAAR;AAA+BqB,MAAAA,OAAO,EAAEF;AAAxC,KAAD,CAAR;AACH,GAZD,CAYE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,kBADD;AAELoB,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD1B,GAEMF,KAAK,CAACE;AALX,KAAD,CAAR;AAOH;AACJ,CAtBM;AAwBP,OAAO,MAAMI,QAAQ,GAAG,CAACC,OAAD,EAASC,aAAT,KAA2B,OAAOpB,QAAP,EAAiBC,QAAjB,KAA8B;AAC7E,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEV;AAAR,KAAD,CAAR;AACA,UAAM;AAAEW,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AACA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxB,KAAK,CAACoC,GAAN,CAAW,eAAcF,OAAQ,MAAjC,EAAuCC,aAAvC,EAAqDf,MAArD,CAAvB,CATA,CAUA;;AACAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAET,iBAAR;AAA2BkB,MAAAA,OAAO,EAAEF;AAApC,KAAD,CAAR;AACH,GAZD,CAYE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,cADD;AAELiB,MAAAA,OAAO,EACHC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACMF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAD1B,GAEMF,KAAK,CAACE;AALX,KAAD,CAAR;AAOH;AACJ,CAtBM;AAuBX,OAAO,MAAMQ,YAAY,GAAC,MAAI,OAC9BtB,QAD8B,EAE9BC,QAF8B,KAG3B;AACC,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGA,UAAM;AACJQ,MAAAA,SAAS,EAAC;AAACC,QAAAA;AAAD;AADN,QAEHH,QAAQ,EAFX;AAGL,UAAMI,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACLC,QAAAA,aAAa,EAAE,UAASH,QAAQ,CAACI,KAAM;AADlC;AADC,KAAb;AAMA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMxB,KAAK,CAACgC,GAAN,CAAW,sBAAX,EAAiCZ,MAAjC,CAAnB;AACAkB,IAAAA,OAAO,CAACC,GAAR;AAEAxB,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACN,qBADA;AAELe,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKI,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AAELE,MAAAA,IAAI,EAAEL,kBAFD;AAGLc,MAAAA,OAAO,EACPC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACEF,KAAK,CAACE,OAAN,CAAcL,IAAd,CAAmBK,OADrB,GAECF,KAAK,CAACa;AANF,KAAD,CAAR;AASH;AACJ,CApCM","sourcesContent":["import axios from 'axios'\n// import { config } from 'dotenv'\nimport {ORDER_CREAT_REQUEST,\n    ORDER_CREAT_SUCCESS,\n    ORDER_CREAT_FAIL,\nORDER_DETAILS_REQUEST,\nORDER_DETAILS_SUCCESS,\nORDER_DETAILS_FAIL,\nORDER_PAY_REQUEST,\nORDER_PAY_SUCCESS,\nORDER_PAY_FAIL,\nORDER_LIST_MY_REQUEST,\nORDER_LIST_MY_SUCCESS,\nORDER_LIST_MY_FAIL} from'../constants/orderConstants' \n    export const createOrder = (order) => async (dispatch, getState) => {\n        try {\n            dispatch({ type: ORDER_CREAT_REQUEST })\n            const { userLogin: { userInfo } } = getState()\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                },\n            }\n            const { data } = await axios.post(`/api/orders`,order,config)\n            // console.log(data)\n            dispatch({ type: ORDER_CREAT_SUCCESS, payload: data })\n          \n        } catch (error) {\n            dispatch({\n                type: ORDER_CREAT_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            })\n        }\n    } \n\n    export const getOrderDetails = (id) => async (dispatch, getState) => {\n        try {\n            dispatch({ type: ORDER_DETAILS_REQUEST })\n            const { userLogin: { userInfo } } = getState()\n            const config = {\n                headers: {\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                },\n            }\n            const { data } = await axios.get(`/api/orders/${id}`,config)\n            // console.log(data)\n            dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\n        } catch (error) {\n            dispatch({\n                type: ORDER_DETAILS_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            })\n        }\n    }    \n    \n    export const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\n        try {\n            dispatch({ type: ORDER_PAY_REQUEST})\n            const { userLogin: { userInfo } } = getState()\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                },\n            }\n            const { data } = await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config) \n            // console.log(data)\n            dispatch({ type: ORDER_PAY_SUCCESS, payload: data })\n        } catch (error) {\n            dispatch({\n                type: ORDER_PAY_FAIL,\n                payload:\n                    error.response && error.response.data.message\n                        ? error.response.data.message\n                        : error.message,\n            })\n        }\n    }  \nexport const listMyOrders=()=>async(\ndispatch,\ngetState\n)=>{\n    try {\n      dispatch({\n          type: ORDER_LIST_MY_REQUEST\n      }) \n      const {\n        userLogin:{userInfo}  \n      } =getState()\n const config={\n     headers:{\n        Authorization:`Bearer ${userInfo.token}`,\n     },\n }\n\n const {data}=await axios.get(`/api/orders/myorders`,config)\n console.log\n\n dispatch({\n     type:ORDER_LIST_MY_SUCCESS,\n     payload:data,\n })\n\n    } catch (error) {\n        dispatch({\n\n            type: ORDER_LIST_MY_FAIL,\n            payload:\n            error.response && error.response.data.message \n            ? error.message.data.message\n            :error.messaeg,\n        })\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}