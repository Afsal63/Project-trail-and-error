{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config); // console.log(data)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload\n    });\n  } catch (error) {}\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,WAAlE,EAA+EC,qBAA/E,EAAsGC,qBAAtG,QAAmI,4BAAnI;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAkB,MAAOC,QAAP,IAAkB;AACrD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACT;AAAN,KAAD,CAAR;AACA,UAAMU,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AAAX,KAAf;AACA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMd,KAAK,CAACe,IAAN,CAAW,kBAAX,EAA8B;AAACP,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA9B,EAA+CG,MAA/C,CAAnB,CAHA,CAIA;;AACAF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR,kBAAN;AAAyBa,MAAAA,OAAO,EAACF;AAAjC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACH,GAPD,CAOE,OAAOO,KAAP,EAAc;AACZX,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV,eAAP;AACLe,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AACJ,CAhBM;AAkBP,OAAO,MAAMC,MAAM,GAAE,MAAKd,QAAD,IAAY;AACjCO,EAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAf,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP;AAAP,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMsB,QAAQ,GAAE,CAACC,IAAD,EAAMnB,KAAN,EAAYC,QAAZ,KAAwB,MAAOC,QAAP,IAAkB;AAC7D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACN;AADA,KAAD,CAAR;AAGA,UAAMO,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAgB;AADZ;AADC,KAAb;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMd,KAAK,CAACe,IAAN,CACf,YADe,EAEf;AAACY,MAAAA,IAAD;AAAMnB,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAFe,EAGfG,MAHe,CAAnB;AAKAF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,qBADA;AAELU,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACR,kBADA;AAELa,MAAAA;AAFK,KAAD,CAAR;AAIH,GAvBD,CAuBE,OAAOK,KAAP,EAAc,CAEf;AACJ,CA3BM","sourcesContent":["import axios from 'axios'\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\"\n\n\nexport const login = (email,password)=>async (dispatch)=>{\n    try {\n        dispatch({type:USER_LOGIN_REQUEST})\n        const config = { headers: {'Content-Type': 'application/json',},}\n        const {data}=await axios.post('/api/users/login',{email,password},config)\n        // console.log(data)\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data})\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({type: USER_LOGIN_FAIL,\n            payload:\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          })\n    }\n}\n\nexport const logout =()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n}\n\nexport const register =(name,email,password)=> async (dispatch)=>{\n    try {\n        dispatch({\n            type:USER_REGISTER_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-Type': 'application/json'\n            },\n        }\n        const {data}=await axios.post(\n            '/api/users',\n            {name,email,password},\n            config\n        )\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data,\n\n        })\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload\n        })\n    } catch (error) {\n        \n    }\n}"]},"metadata":{},"sourceType":"module"}