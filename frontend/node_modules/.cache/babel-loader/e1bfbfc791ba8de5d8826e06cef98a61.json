{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst intialState = {\n  cart: {\n    cartItems: ca\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","intialState","cartItems","ca","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAoCC,eAApC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EACIC,qBADJ,QAEQ,4BAFR;AAGE,SAASC,WAAT,QAA4B,yBAA5B;AAEF,MAAMC,OAAO,GAAEP,eAAe,CAAC;AAC3BQ,EAAAA,WAAW,EAAEJ,kBADc;AAE3BK,EAAAA,cAAc,EAACJ,qBAFY;AAG3BK,EAAAA,IAAI,EAAEJ;AAHqB,CAAD,CAA9B;AAKA,MAAMK,oBAAoB,GAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAC/DH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAD+D,CAApC,GACU,EADtC;AAEA,MAAMG,WAAW,GAAE;AACfN,EAAAA,IAAI,EAAC;AAACO,IAAAA,SAAS,EAACC;AAAX;AADU,CAAnB;AAIA,MAAMC,UAAU,GAAE,CAACjB,KAAD,CAAlB;AAEA,MAAMkB,KAAK,GAAErB,WAAW,CAACQ,OAAD,EAAUS,WAAV,EAAsBb,mBAAmB,CAC5DF,eAAe,CAAC,GAAGkB,UAAJ,CAD6C,CAAzC,CAAxB;AAGI,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productListReducer,\n    productDetailsReducer,\n } from './reducers/productReducers'\n  import { cartReducer } from './reducers/cartReducers' \n\nconst reducer =combineReducers({\n    productList: productListReducer,\n    productDetails:productDetailsReducer,\n    cart: cartReducer\n})\nconst cartItemsFromStorage =localStorage.getItem('cartItems') ? JSON.parse\n(localStorage.getItem('cartItems')) : []\nconst intialState ={\n    cart:{cartItems:ca}\n}\n\nconst middleware =[thunk]\n\nconst store= createStore(reducer, intialState,composeWithDevTools\n    (applyMiddleware(...middleware)))\n\n    export default store"]},"metadata":{},"sourceType":"module"}