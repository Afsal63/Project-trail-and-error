{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconsole.log(localStorage.getItem('cartItems') == tr);\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst intialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, intialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","console","log","localStorage","getItem","tr","cartItemsFromStorage","JSON","parse","intialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,QAGO,4BAHP;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,kBADe;AAE5BK,EAAAA,cAAc,EAAEJ,qBAFY;AAG5BK,EAAAA,IAAI,EAAEJ;AAHsB,CAAD,CAA/B;AAMAK,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqCC,EAAjD;AACA,MAAMC,oBAAoB,GAAGH,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBG,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GAEvB,EAFN;AAIA,MAAMK,WAAW,GAAG;AAChBT,EAAAA,IAAI,EAAE;AAAEU,IAAAA,SAAS,EAAEJ;AAAb;AADU,CAApB;AAIA,MAAMK,UAAU,GAAG,CAACnB,KAAD,CAAnB;AAEA,MAAMoB,KAAK,GAAGvB,WAAW,CAACQ,OAAD,EAAUY,WAAV,EAAuBhB,mBAAmB,CAC9DF,eAAe,CAAC,GAAGoB,UAAJ,CAD+C,CAA1C,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer\n})\n\nconsole.log(localStorage.getItem('cartItems') == tr);\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\nconst intialState = {\n    cart: { cartItems: cartItemsFromStorage }\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, intialState, composeWithDevTools\n    (applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}