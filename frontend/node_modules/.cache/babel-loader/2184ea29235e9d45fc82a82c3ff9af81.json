{"ast":null,"code":"var _jsxFileName = \"/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { use } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport { useState } from 'react';\nimport { saveShippingAddress } from '../actions/cartAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = () => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Address\",\n          value: address,\n          required: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter City \",\n          value: address,\n          required: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"postalCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Postal Code \",\n          value: postalCode,\n          required: true,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Country \",\n          value: country,\n          required: true,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ShippingScreen, \"8mGgLRqpyUuj517fN372nX9r/ug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/screens/ShippingScreen.js"],"names":["React","use","Form","Button","useDispatch","useSelector","FormContainer","useState","saveShippingAddress","ShippingScreen","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{use} from 'react'\nimport {Form,Button} from 'react-bootstrap'\nimport { useDispatch,useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { useState } from 'react'\nimport { saveShippingAddress } from '../actions/cartAction'\n\n\nconst ShippingScreen = () => {\n    const cart =useSelector(state=> state.cart)\n    const{shippingAddress}=cart\n    const [address,setAddress]=useState(shippingAddress.address)\n    const [city,setCity]=useState(shippingAddress.city)\n    const [postalCode,setPostalCode]=useState(shippingAddress.postalCode)\n    const [country,setCountry]=useState(shippingAddress.country)\n\n    const dispatch=useDispatch()\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n      dispatch(saveShippingAddress({address,city,postalCode,country}))\n      \n    }\n\n  return (\n      <FormContainer>\n<h1>Shipping</h1>\n<Form onSubmit={submitHandler}>\n    \n <Form.Group controlId='address'>\n     <Form.Label>Address</Form.Label>\n     <Form.Control\n     type='text'\n     placeholder='Enter Address'\n     value={address}\n     required\n     onChange={(e)=>setAddress(e.target.value)}\n     ></Form.Control>\n </Form.Group>\n\n <Form.Group controlId='city'>\n     <Form.Label> City</Form.Label>\n     <Form.Control\n     type='text'\n     placeholder='Enter City '\n     value={address}\n     required\n     onChange={(e)=>setAddress(e.target.value)}\n     ></Form.Control>\n </Form.Group>\n\n <Form.Group controlId='postalCode'>\n     <Form.Label> Postal Code</Form.Label>\n     <Form.Control\n     type='text'\n     placeholder='Enter Postal Code '\n     value={postalCode}\n     required\n     onChange={(e)=>setPostalCode(e.target.value)}\n     ></Form.Control>\n </Form.Group>\n\n <Form.Group controlId='country'>\n     <Form.Label> Country</Form.Label>\n     <Form.Control\n     type='text'\n     placeholder='Enter Country '\n     value={country}\n     required\n     onChange={(e)=>setCountry(e.target.value)}\n     ></Form.Control>\n </Form.Group>\n\n<Button type='submit' variant='primary'>Continue</Button>\n\n</Form>\n      </FormContainer>\n  )\n}\n\nexport default ShippingScreen"]},"metadata":{},"sourceType":"module"}