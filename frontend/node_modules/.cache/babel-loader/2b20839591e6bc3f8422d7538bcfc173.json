{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/cartConstands\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      console.log(payload);\n      const existItem = state.cartItems.find(x => x.product === item.product);\n      console.log(existItem);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/afsal/Desktop/THE-PROJECT1/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","type","payload","action","item","console","log","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,YAAgD;AAAA,MAA/CC,KAA+C,uEAAvC;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAAuC;AAAA,MAApB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAoB;;AACvE,UAAQC,MAAM,CAACF,IAAf;AACI,SAAKJ,aAAL;AACI,YAAMO,IAAI,GAAGD,MAAM,CAACD,OAApB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,YAAMK,SAAS,GAAGR,KAAK,CAACC,SAAN,CAAgBQ,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcN,IAAI,CAC1DM,OADc,CAAlB;AAGIL,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACJ,UAAIA,SAAJ,EAAe;AACX,eAAO,EACH,GAAGR,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCN,IAAlC,GAAyCK,CADhC;AAFR,SAAP;AAQH,OATD,MASO;AACH,eAAM,EACF,GAAGV,KADD;AAEFC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFT,SAAN;AAKH;;AAEL;AACI,aAAOL,KAAP;AA1BR;AA4BH,CA7BM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/cartConstands\";\n\nexport const cartReducer = (state = { cartItems: [] }, {type, payload}) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            console.log(payload);\n            const existItem = state.cartItems.find(x => x.product === item.\n                product)\n\n                console.log(existItem);\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map((x) =>\n                      x.product === existItem.product ? item : x\n                    ),\n                    \n                }\n\n            } else {\n                return{\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                }\n\n            }\n           \n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}